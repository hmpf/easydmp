# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-08-01 11:10
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import jsonfield.encoder
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dmpt', '0001_squashed_0031_improve_cloning'),
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='This title will be used as the title of the generated\n        data management plan document. We recommend something that includes the\n        name of the project the plan is for, e.g., "Preliminary data plan for\n        &lt;project&gt;", "Revised data plan for &lt;project&gt;", etc.', max_length=255)),
                ('abbreviation', models.CharField(blank=True, help_text='A short abbreviation of the plan title, for internal use. Not shown in the generated file.', max_length=8)),
                ('version', models.PositiveIntegerField(default=1)),
                ('data', jsonfield.fields.JSONField(default={}, dump_kwargs={'cls': jsonfield.encoder.JSONEncoder, 'separators': (',', ':')}, load_kwargs={})),
                ('previous_data', jsonfield.fields.JSONField(default={}, dump_kwargs={'cls': jsonfield.encoder.JSONEncoder, 'separators': (',', ':')}, load_kwargs={})),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_plans', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_plans', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='dmpt.Template')),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_plans', to=settings.AUTH_USER_MODEL)),
                ('locked', models.DateTimeField(blank=True, null=True)),
                ('locked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_plans', to=settings.AUTH_USER_MODEL)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('generated_html', models.TextField(blank=True)),
                ('doi', models.URLField(blank=True, default='', help_text='Use the URLified DOI, https://dx.doi.org/<doi>')),
                ('last_validated', models.DateTimeField(blank=True, null=True)),
                ('valid', models.NullBooleanField()),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.Plan')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='plan',
            name='visited_sections',
            field=models.ManyToManyField(blank=True, related_name='_plan_visited_sections_+', to='dmpt.Section'),
        ),
        migrations.CreateModel(
            name='QuestionValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid', models.BooleanField()),
                ('last_validated', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_validity', to='plan.Plan')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmpt.Question')),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.QuestionValidity')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='questionvalidity',
            unique_together=set([('plan', 'question')]),
        ),
        migrations.CreateModel(
            name='SectionValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid', models.BooleanField()),
                ('last_validated', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_validity', to='plan.Plan')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmpt.Section')),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.SectionValidity')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='sectionvalidity',
            unique_together=set([('plan', 'section')]),
        ),
        migrations.CreateModel(
            name='PlanAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
                ('may_edit', models.NullBooleanField()),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.PlanAccess')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='plan.Plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_accesses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='planaccess',
            unique_together=set([('user', 'plan')]),
        ),
        migrations.CreateModel(
            name='PlanComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_comments', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='plan.Plan')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dmpt.Question')),
            ],
        ),
    ]
