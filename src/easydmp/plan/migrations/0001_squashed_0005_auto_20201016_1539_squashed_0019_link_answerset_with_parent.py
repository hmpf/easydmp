# Generated by Django 3.2.3 on 2021-09-27 07:40

from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import easydmp.dmpt.utils
import uuid


class Migration(migrations.Migration):

    replaces = [('plan', '0001_squashed_0005_auto_20201016_1539'), ('plan', '0007_auto_20201111_1411_squashed_0010_delete_plancomment'), ('plan', '0008_answerset_data'), ('plan', '0009_answerset_previous_data'), ('plan', '0010_switch_to_native_JSONField'), ('plan', '0011_noop'), ('plan', '0012_add_identifier_to_answerset'), ('plan', '0013_link_missing_answersets'), ('plan', '0014_move_data_into_answersets'), ('plan', '0015_noop'), ('plan', '0016_drop_Answer_plan_fk'), ('plan', '0017_drop_data_from_Plan'), ('plan', '0018_answerset_parent'), ('plan', '0019_link_answerset_with_parent')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dmpt', '0001_squashed_0011_section_optional_squashed_0008_switch_to_native_JSONField'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(help_text='This title will be used as the title of the generated\n        data management plan document. We recommend something that includes the\n        name of the project the plan is for, e.g., "Preliminary data plan for\n        &lt;project&gt;", "Revised data plan for &lt;project&gt;", etc.', max_length=255)),
                ('abbreviation', models.CharField(blank=True, help_text='A short abbreviation of the plan title, for internal use. Not shown in the generated file.', max_length=8)),
                ('version', models.PositiveIntegerField(default=1)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('valid', models.BooleanField(blank=True, null=True)),
                ('last_validated', models.DateTimeField(blank=True, null=True)),
                ('generated_html', models.TextField(blank=True)),
                ('search_data', models.TextField(blank=True, null=True)),
                ('doi', models.URLField(blank=True, default='', help_text='Use the URLified DOI, https://dx.doi.org/<doi>')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('locked', models.DateTimeField(blank=True, null=True)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_plans', to=settings.AUTH_USER_MODEL)),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.plan')),
                ('locked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_plans', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_plans', to=settings.AUTH_USER_MODEL)),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_plans', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='dmpt.template')),
                ('visited_sections', models.ManyToManyField(blank=True, related_name='_plan_plan_visited_sections_+', to='dmpt.Section')),
            ],
            options={
                'abstract': False,
            },
            bases=(easydmp.dmpt.utils.DeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AnswerSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, default='1', max_length=120)),
                ('valid', models.BooleanField(default=False)),
                ('last_validated', models.DateTimeField(auto_now=True)),
                ('data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('previous_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.answerset')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answersets', to='plan.answerset')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answersets', to='plan.plan')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answersets', to='dmpt.section')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
                ('valid', models.BooleanField(default=False)),
                ('last_validated', models.DateTimeField(auto_now=True)),
                ('answerset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='plan.answerset')),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.answer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmpt.question')),
            ],
        ),
        migrations.CreateModel(
            name='PlanAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cloned_when', models.DateTimeField(blank=True, null=True)),
                ('may_edit', models.BooleanField(blank=True, null=True)),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clones', to='plan.planaccess')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='plan.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'plan')},
            },
        ),
        migrations.AddConstraint(
            model_name='answerset',
            constraint=models.UniqueConstraint(condition=models.Q(('parent__isnull', True)), fields=('plan', 'section', 'identifier'), name='plan_answerset_unique_identifiers'),
        ),
        migrations.AddConstraint(
            model_name='answerset',
            constraint=models.UniqueConstraint(condition=models.Q(('parent__isnull', False)), fields=('plan', 'section', 'parent', 'identifier'), name='plan_answerset_unique_identifiers_parent'),
        ),
        migrations.AddConstraint(
            model_name='answer',
            constraint=models.UniqueConstraint(fields=('answerset', 'question'), name='plan_answer_one_answer_per_question'),
        ),
    ]
