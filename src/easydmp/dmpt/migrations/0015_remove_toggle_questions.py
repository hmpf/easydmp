# Generated by Django 3.2.12 on 2022-08-30 12:16

from django.db import migrations


def remove_section_optional_questions(apps, _):
    Section = apps.get_model('dmpt', 'Section')
    Question = apps.get_model('dmpt', 'Question')
    CannedAnswer = apps.get_model('dmpt', 'CannedAnswer')
    ExplicitBranch = apps.get_model('dmpt', 'ExplicitBranch')
    AnswerSet = apps.get_model('plan', 'AnswerSet')
    for question in Question.objects.filter(position=0):
        if not question.section.optional_canned_text:
            try:
                ca_no = CannedAnswer.objects.get(question=question, choice="No")
            except CannedAnswer.DoesNotExist:
                pass
            else:
                if ca_no.canned_text.strip() not in ('', 'No'):
                    question.section.optional_canned_text = ca_no.canned_text.strip()
                    question.section.save()
        qid = str(question.id)
        for answerset in AnswerSet.objects.filter(section=question.section):
            answerset.data.pop(qid, None)
            answerset.previous_data.pop(qid, None)
        question.delete()
    for section in Section.objects.filter(optional=True):
        branching = False
        for question in Question.objects.filter(section=section):
            if ExplicitBranch.objects.filter(current_question=question).exists():
                branching = True
                break
        if section.branching != branching:
            section.branching = branching
            section.save()


def add_section_optional_questions(apps, _):
    Section = apps.get_model('dmpt', 'Section')
    Question = apps.get_model('dmpt', 'Question')
    CannedAnswer = apps.get_model('dmpt', 'CannedAnswer')
    ExplicitBranch = apps.get_model('dmpt', 'ExplicitBranch')
    AnswerSet = apps.get_model('plan', 'AnswerSet')
    text_to_update = "(Template designer please update)"
    help_text = (text_to_update + 'This is an optional section. '
                 'If you select "No", this section will be skipped.')
    value = {'notes': ''}
    for section in Section.objects.filter(optional=True):
        section.branching = True
        section.save()
        question = Question.objects.create(
            input_type_id='bool',
            section=section,
            position=0,
            question=text_to_update,
            help_text=help_text,
        )
        CannedAnswer.objects.create(
            question=question,
            choice='Yes',
            canned_text='Yes',
        )
        CannedAnswer.objects.create(
            question=question,
            choice='No',
            canned_text=section.optional_canned_text or 'No',
        )
        ExplicitBranch.objects.create(
            current_question=question,
            category='Last',
            condition='No',
        )
        for answerset in AnswerSet.objects.filter(section=section):
            qid = str(question.id)
            value['choice'] = 'No' if answerset.skipped else 'Yes'
            answerset.data[qid] = value


class Migration(migrations.Migration):

    dependencies = [
        ('dmpt', '0014_section_optional_canned_text'),
        ('plan', '0005_answerset_plan_answerset_skipped_never_false'),
    ]

    operations = [
        migrations.RunPython(remove_section_optional_questions, add_section_optional_questions),
    ]
